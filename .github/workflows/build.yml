name: CMake on multiple platforms

on:
  push:

jobs:
  build:
    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        include:
          - os: macos
            label: macos-latest
            generator_option: "-GXcode"
          - os: windows
            label: windows-latest
            generator_option:
          - os: linux
            label: ubuntu-latest
            generator_option:

    runs-on: ${{ matrix.label }}
    steps:
    - name: Setup Xcode version
      if: matrix.os == 'macos'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 16.1
    # Workaround for "error: externally-managed-environment" when installing Conan.
    # See https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3
    - name: Allow `--break-system-packages` for pip (MacOS)
      if: matrix.os == 'macos'
      run: |
        mkdir -p ~/.config/pip
        cd ~/.config/pip
        echo "[global]" >pip.conf
        echo "break-system-packages = true" >>pip.conf
    - name: Install linux dependencies
      if: matrix.os == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev libjack-jackd2-dev \
            ladspa-sdk \
            libcurl4-openssl-dev  \
            libfreetype-dev libfontconfig1-dev \
            libx11-dev libxcomposite-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev \
            libwebkit2gtk-4.1-dev \
            libglu1-mesa-dev mesa-common-dev
    - name: Install Conan
      uses: turtlebrowser/get-conan@main
    - uses: actions/checkout@v4
    - name: Build conan dependencies
      run: |
        conan profile detect
        conan install conanfile.txt -b missing -pr:b default -of id/cmake -s build_type=Debug
    - name: Build nonconan dependencies
      shell: bash
      env:
        BUILD_TYPES: Debug
      run: |
          ./2_build_nonconan.sh
    - name: Configure CMake
      run: |
        conan install conanfile.txt -b missing -pr:b default -of id/cmake -s build_type=Debug
        cmake -S . -B b ${{ matrix.generator_option }} -D CMAKE_BUILD_TYPE=Debug 
    - name: Build
      run: cmake --build b --config Debug -j
